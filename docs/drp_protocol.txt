DECENTRALIZED ROUTING PROTOCOL (DRP) WHITEPAPER

CONCEPTS
ID keypair: public + private key
IDspace 8-d space (8 axes) = SHA512(public key) (64bytes) 8bytes per dimension (x,y,z,....)
rendervouz nodes (RN) - entries into p2p network, peers with public IP: port
normalized vector between peers A and M (nvAM): used to hide IDm for A, preserving direction from A to M
connection between peers A,M: {IDa, optionalIDm, nvAM}

---------------------------table begin-----------------------------------------------------
realworld                                dcomms
decentr                                  decentr
3D space                                 8D space
police checking cars every 100km         nodes checking fraud/spam filter
capacity limit of roads
local authorities                        anti-fraud reports acceptors (as peers at known locations)
passport ID (optional)                   optional certificate signed by CA
receptionist/board with media            always-online server
conference hall                          always-online server (group chat) 
representative keeping your              always-online server  
real loc. unknown
old language                             old version: signal "update"
neighborhood                                      neighborhood
personal rating: req-resp time, delivery rate     rating
signature with time                               signature with time 
time now                                          time now
---------------------------table end----------------------------------------------------------


STAGES; BEHAVIOUR OF PEERS:
=================keyPairGen@peerA:
CURVE25519
generate keypair, store private key in safe place and at device
calculate SHA512(public key)=64bytes=IDa (v.1) (v.2 linked to email, with attributes)
private key is stored  encrypted by password
cold hardware wallet? offline device / paper

=================settlement of IDa
peerA connects to rendezvous node (RN); then to its neighbours;

peerA sends to RN packet  settlementRequest {IDa,timestamp,PoW,IPa,signatureA}



RN selects peers M, X who are closer to IDa
RN requests  peerM, peerX: settlementRequest {IDa,timestamp,PoW,IPa,signatureA}

peerX,M respond with settlementResponse:OK/reject

RN responds   to peerA: settlementResponse {IPm,IPx}

peerA asks "can I settle to my IDa?";
the network spreads the "settlementRequest" signal to corect neighbours; 
some neighbours reply and get connected to peerA

=================interconnection with peerB@peerA
get IDb from public internet or physically (in-person meeting, QR code)
establish connection via P2P network with peerB

=================initialLookup @peerA


==== no reply to initialLookup;retransmission

=================initialLookup routed @peerX

=================initialLookup received @peerB

=================max N hops reached maximum @peerX

=================initialLookupResponse

=================lookup (having preshared key)

=================backup contact book and preshared keys to some trusted place (file?)


PACKETS:
settlementRequest+response




-------------------------------------------
initialLookup (peerA->peerX, peerX->peerY, peerY->peerB)
IDa,IDb,timestamp,DHkeyA=nonceA,signatureA,cpuPoW,nhops

initialLookupACK (from peerX)
IDa,IDb,timestamp,DHkeyA=nonceA,signatureA,cpuPoW


initialLookupResponse


initialLookupResponseACK


-----------------------------------
subsequentLookup

pingNeighbour+response (while settled) 
connectToAnotherNeighbour+response (give more neighbours) (before and after settlement)


PEER-TO-PEER RATING
PRIVATE RATINGS ONLY (no "fake" rating attack)
do neighbors trust you to proxy real messages or they just take your messages and send you test messages to random test IDs?
-distance to neighbour (prefer close?)
-lifetime of ID-ID connection
-delivery rate (%) while ping is OK

"broadcast bad neighour signal to close area". when too many IDs.
- ???? (centralized) policemen build rating out of neighbours (collect ratings)












ATTACKS

STOLEN PRIVATE KEY ATATCK
store at safe place, user's responsibility

FLOODING ATTACK WITH ANY PACKET
CPU-based proof of work

BAD NEIGHBORHOOD ATTACK (Sybil attack):
- drop packets
- malform packets: signature protection
- replay packets: duplicate delivery.    neighbors look at unique data, dont proxy duplicates
- delay packets

SRC/DST ID SNIFFING ATTACK
scanners sniffing src/dst IDs (contact book leakage)  
@neighborhood or everywhere in the network
- send many "test" initialLookup packets (fake, not real messages) to randomly discovered IDs


SETTLEMENT FLOODING ATTACK
- neighbours limit rate of new peers settled
- signature of "seeder" CA who generates and distributes IDs

OCCUPY-FLOOD ATTACK
attacker settles   100 nodes across network.   for 1 month they behave normally. then he starts attack:   1) let his 100 nodes drop all other (not bellonging to attacker) peers   2) generate a flood between the 100 peers, across the network.   it is a very advanced DoS.
here bad means  relaying attacker's packets   but dropping other packets.
it is like you send your agents to enemy, 1000 agents. they first settle and 1 year behave normally. then they get your command to attack
solution: there can be an authority (optionally used in case of such dos). a local authority = government. then in case of dos  -authority-signed packets are routed always first.
"i am french gov. user  -   i trust french government authority - in case of DoS I better trust senders who are signed with french government certificate"
so only signed packets/messages go through during the dos
.. openPGP level of trust


SETTLEMENT IN BAD PLACE (MISLEAD BY RENDEZVOUS NODE)

GENERATION OF EXACTLY SAME ID

BAD CRYPTO LIBRARIES AT TARGET DEVICE

BAD CRYPTO LIBRARIES AT PEER'S DEVICE


MONETIZATION MODELS
- DNS: short name-ID(s) linking authority center - when party B is not private
- DUNS: ID to legal name - when party B is not private
- "always online servers" hosting - offline messages, group chats, hosted media (like instagram, micro-websites), hide IP address

