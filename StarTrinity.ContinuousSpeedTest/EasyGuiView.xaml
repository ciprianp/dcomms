<UserControl x:Class="StarTrinity.ContinuousSpeedTest.EasyGuiView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1000">
    <Grid Visibility="{Binding MainVM.LocalPeerConfigurationRoleAsUser, Converter={StaticResource BoolToVisibilityConverter}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Visibility="{Binding StartVisibility}" HorizontalAlignment="Center" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!--<TextBlock  Text="mode: " FontSize="30" HorizontalAlignment="Right" />
            <ComboBox  Grid.Column="1" VerticalAlignment="Center"  HorizontalAlignment="Center" ItemsSource="{Binding Modes}" SelectedItem="{Binding Mode}" DisplayMemberPath="Description" FontSize="25" MinWidth="150" />-->

            <Button Grid.Row="1" Grid.ColumnSpan="2" Command="{Binding StartTest}" Content="Start test" FontSize="30" />
        </Grid>
        
        <Grid Visibility="{Binding MeasurementsVisibility}" HorizontalAlignment="Center" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Text="target: " FontSize="30" HorizontalAlignment="Right" Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibilityOppositeConverter}}"/>
            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1" Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibilityOppositeConverter}}">
                <TextBlock Text="{Binding MainVM.SubtLocalPeerConfigurationBandwidthTargetString}" FontSize="30" />
                <Button Content="&#8657;" Command="{Binding MainVM.SubtLocalPeerConfigurationBandwidthTargetIncrease}" FontSize="30" />
                <Button Content="&#8659;"  Command="{Binding MainVM.SubtLocalPeerConfigurationBandwidthTargetDecrease}" FontSize="30" />                
            </StackPanel>           
            
            <!--<TextBlock Visibility="{Binding ModeVisibility}" Text="mode: " FontSize="30" HorizontalAlignment="Right" />
            <ComboBox Visibility="{Binding ModeVisibility}"  Grid.Column="1" VerticalAlignment="Center"  HorizontalAlignment="Center" ItemsSource="{Binding Modes}" SelectedItem="{Binding Mode}" DisplayMemberPath="Description" FontSize="25" MinWidth="150" />-->

            <TextBlock Grid.Row="1" Text="download: " FontSize="30" HorizontalAlignment="Right" Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibilityOppositeConverter}}"/>
            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding RecentRxBandwidthString}" FontSize="30" Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibilityOppositeConverter}}"/>
            <TextBlock Grid.Row="2" Text="upload: " FontSize="30" HorizontalAlignment="Right" Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibilityOppositeConverter}}"/>
            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding RecentTxBandwidthString}" FontSize="30" Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibilityOppositeConverter}}"/>

            <TextBlock Grid.Row="3" Text="RTT (ping): " FontSize="30" HorizontalAlignment="Right" Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibilityOppositeConverter}}"/>
            <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding RecentRttString}" FontSize="30" Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibilityOppositeConverter}}"/>


            <Button Grid.Row="4" Grid.ColumnSpan="2"  Command="{Binding PauseTest}" Content="Pause" FontSize="25" Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibilityOppositeConverter}}" />
            <Button Grid.Row="4" Grid.ColumnSpan="2"  Command="{Binding ResumeTest}" Content="Resume" FontSize="25" Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibilityConverter}}" />
                        
        </Grid>
        <!--<StackPanel Grid.Row="1" Orientation="Horizontal" Visibility="{Binding MeasurementsVisibility}">
         
            <Button  Content="uptimes and downtimes history" />
        </StackPanel>-->

        <TabControl Grid.Row="2" >
            <TabItem IsSelected="{Binding MeasurementsTabIsSelected}">
                <TabItem.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal"  DataContext="{Binding Source={StaticResource EasyGuiViewModel}}">
                            <TextBlock Text="Measurements" VerticalAlignment="Bottom" Margin="3"/>
                            <Button Command="{Binding ClearMeasurements}" Content="clear" />
                            <Button Command="{Binding ExportMeasurements}" Content="export" />
                            <!--<TextBlock Text="note: it may take 1 minute for the test to allocate bandwidth for you on our servers" />-->
                        </StackPanel>
                    </DataTemplate>
                </TabItem.HeaderTemplate>                
                <DataGrid ItemsSource="{Binding Measurements}" Visibility="{Binding MeasurementsVisibility}" Name="measurementsDataGrid" >
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Time" Binding="{Binding MeasurementTime, StringFormat='\{0:yyyy-MM-dd HH:mm:ss\}', Mode=OneTime}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Download" Binding="{Binding RxBandwidthString, Mode=OneTime}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Background" Value="{Binding RxBandwidthColor, Converter={StaticResource ColorToBrushConverter}}" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Packet loss" Binding="{Binding RxPacketLossString, Mode=OneTime}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Background" Value="{Binding RxPacketLossColor, Converter={StaticResource ColorToBrushConverter}}" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Upload" Binding="{Binding TxBandwidthString, Mode=OneTime}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Background" Value="{Binding TxBandwidthColor, Converter={StaticResource ColorToBrushConverter}}" />
                                </Style>
                            </DataGridTextColumn.CellStyle>                    
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Packet loss" Binding="{Binding TxPacketLossString, Mode=OneTime}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Background" Value="{Binding TxPacketLossColor, Converter={StaticResource ColorToBrushConverter}}" />
                                </Style>
                            </DataGridTextColumn.CellStyle>                    
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="RTT (ping)" Binding="{Binding BestRttToPeersString, Mode=OneTime}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Background" Value="{Binding BestRttToPeersColor, Converter={StaticResource ColorToBrushConverter}}" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem IsSelected="{Binding UptimeStatisticsTabIsSelected}">
                <TabItem.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" DataContext="{Binding Source={StaticResource EasyGuiViewModel}}">
                            <TextBlock Text="Uptime" VerticalAlignment="Bottom" Margin="3"/>
                            <TextBlock Text="{Binding MainVM.DowntimesTracker.TabHeaderString}" />
                        </StackPanel>
                    </DataTemplate>
                </TabItem.HeaderTemplate>
                

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Text="uptime:" FontSize="20" />
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding MainVM.DowntimesTracker.UptimeDurationString}" FontSize="20" />
                    <TextBlock Grid.Row="1" Text="downtime:" FontSize="20" />
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding MainVM.DowntimesTracker.DowntimeDurationString}" FontSize="20" />
                    <Button Grid.Row="0" Grid.Column="2" Command="{Binding MainVM.DowntimesTracker.Clear}" Content="clear" HorizontalAlignment="Left" />
                    
                    <DataGrid Grid.Row="2" Grid.ColumnSpan="3"  ItemsSource="{Binding MainVM.DowntimesTracker.Fragments}" >
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Start" Binding="{Binding StartTime, StringFormat='\{0:yyyy-MM-dd HH:mm:ss\}', Mode=OneTime}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Stop" Binding="{Binding StopTime, StringFormat='\{0:yyyy-MM-dd HH:mm:ss\}'}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Duration" Binding="{Binding DurationString}">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Background" Value="{Binding DurationColor, Converter={StaticResource ColorToBrushConverter}}" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>                                
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="State" Binding="{Binding UpOrDownString}">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Background" Value="{Binding UpOrDownColor, Converter={StaticResource ColorToBrushConverter}}" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>    
                </Grid>                
            </TabItem>
        </TabControl>
        
        
    </Grid>
</UserControl>
